name: Build Release

on:
  push:
    branches:
      - "master"
    paths:
      - "CHANGELOG.md"
  workflow_dispatch:

jobs:
  golib:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.23
          cache-dependency-path: ${{ github.workspace }}/tts-server-lib

      - name: Build tts-server-lib
        run: |
          cd $GITHUB_WORKSPACE/.github/scripts
          chmod +x *.sh
          ./build_gojni.sh

      - uses: actions/upload-artifact@v4
        with:
          name: tts-server-lib
          path: lib-gojni-aar/*.aar

  build:
    needs: golib
    strategy:
      matrix:
        product: [ { name: "App原版", value: app } ]

      fail-fast: false
    runs-on: ubuntu-latest
    env:
      product: ${{ matrix.product.value }}
      product_name: ${{matrix.product.value}}
      outputs_dir: "${{ github.workspace }}/app/build/outputs"
      ver_name: ""

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: tts-server-lib
          path: ${{ github.workspace }}/lib-gojni-aar

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Init Signature
        run: |
          touch local.properties
          echo ALIAS_NAME='${{ secrets.ALIAS_NAME }}' >> local.properties
          echo ALIAS_PASSWORD='${{ secrets.ALIAS_PASSWORD }}' >> local.properties
          echo KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}' >> local.properties
          echo KEY_PATH='./key.jks' >> local.properties
          # 从Secrets读取无换行符Base64解码, 然后保存到到app/key.jks
          echo ${{ secrets.KEY_STORE }} | base64 --decode > $GITHUB_WORKSPACE/app/key.jks

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew assemble${{ env.product }}release --build-cache --parallel --daemon --warning-mode all

      - name: Init environment variable
        run: |
          echo "ver_name=$(grep -m 1 'versionName' ${{ env.outputs_dir }}/apk/${{ env.product }}/release/output-metadata.json | cut -d\" -f4)" >> $GITHUB_ENV

      - name: Upload Mappings to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mappings_${{ env.product }}_${{ env.ver_name }}
          path: ${{ env.outputs_dir }}/mapping/*/*.txt

      - name: Upload APK To Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "TTS-Server_${{ env.product }}_${{ env.ver_name }}"
          path: ${{env.outputs_dir}}/apk/${{ env.product }}/release/*${{ env.ver_name }}.apk


      - uses: softprops/action-gh-release@v0.1.15
        with:
          name: ${{ env.ver_name }}
          tag_name: ${{ env.ver_name }}
          body_path: ${{ github.workspace }}/CHANGELOG.md
          draft: false
          prerelease: false
          files: ${{env.outputs_dir}}/apk/${{ env.product }}/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}    
